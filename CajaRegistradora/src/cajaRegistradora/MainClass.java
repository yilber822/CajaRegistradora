package cajaRegistradora;

import javax.swing.JOptionPane;

import control.Cuenta;
import control.ListaCircular;
import control.Nodo;
import control.Plato;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JTextArea;

/**
 *
 * @author Yilber
 */
public class MainClass extends javax.swing.JFrame {

    /**
     * Creates new form CajaRegistradora
     */
	
	public static Cuenta cuenta;
	public static Plato plato;
	public static ListaCircular listaCuentas = new ListaCircular();

	
    public MainClass() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        controlPlato(false);
        controlBorrar(false);
        setTitle("Caja Registradora");
    }

    private void controlCliente(boolean encendido){
    	txtNombreC.setEditable(encendido);
    	txtDocumento.setEditable(encendido);
    	txtMesa.setEditable(encendido);
    	txtNombreC.setEnabled(encendido);
    	txtDocumento.setEnabled(encendido);
    	txtMesa.setEnabled(encendido);
    	efectivo.setEnabled(encendido);
    	tarjeta.setEnabled(encendido);
    	bono.setEnabled(encendido);
    	btnRegistrar.setEnabled(encendido);
    }
    
    private void controlPlato(boolean encendido){
    	txtNombreP.setEditable(encendido);
    	txtPrecio.setEditable(encendido);
    	txtCantidad.setEditable(encendido);
    	txtNombreP.setEnabled(encendido);
    	txtPrecio.setEnabled(encendido);
    	txtCantidad.setEnabled(encendido);
    	entrada.setEnabled(encendido);
    	fuerte.setEnabled(encendido);
    	postre.setEnabled(encendido);
    	bebida.setEnabled(encendido);
    	btnAñadir.setEnabled(encendido);
    }
    
    private void controlBorrar(boolean encendido){
    	txtBuscar.setEditable(encendido);
    	txtBuscar.setEnabled(encendido);
    	btnBorrar.setEnabled(encendido);
    	btnPagar.setEnabled(encendido);
    	txtPlatos_1.setEditable(encendido);
    	txtPlatos_1.setEnabled(encendido);
    }
    
    private void todoBlanco(){
    	cuenta = null;
    	txtNombreP.setText("");
    	txtPrecio.setText("");
    	txtCantidad.setText("");
    	buttonGroup1.clearSelection();
    	buttonGroup2.clearSelection();
    	txtTotal.setText("");
    	txtPlatos_1.setText("");
    	txtBuscar.setText("");
    	txtDocumento.setText("");
    	txtMesa.setText("");
    	txtNombreC.setText("");
    	controlPlato(false);
    	controlBorrar(false);
    	controlCliente(true);
    }
    	
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        panelCliente = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNombreC = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMesa = new javax.swing.JTextField();
        txtDocumento = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        efectivo = new javax.swing.JRadioButton();
        tarjeta = new javax.swing.JRadioButton();
        bono = new javax.swing.JRadioButton();
        btnRegistrar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        panelPlato = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtNombreP = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        entrada = new javax.swing.JRadioButton();
        fuerte = new javax.swing.JRadioButton();
        postre = new javax.swing.JRadioButton();
        bebida = new javax.swing.JRadioButton();
        btnAñadir = new javax.swing.JButton();
        panelEliminar = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        btnBorrar = new javax.swing.JButton();
        btnPagar = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        txtPlatos = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelCliente.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Nombre");

        jLabel2.setText("N. Mesa");

        jLabel3.setText("N. Documento");

        jLabel4.setText("Método de Pago");

        efectivo.setText("Efectivo");

        tarjeta.setText("Tarjeta");

        bono.setText("Bono de regalo");

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Cliente");

        javax.swing.GroupLayout panelClienteLayout = new javax.swing.GroupLayout(panelCliente);
        panelClienteLayout.setHorizontalGroup(
        	panelClienteLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(panelClienteLayout.createSequentialGroup()
        			.addGap(23)
        			.addGroup(panelClienteLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(panelClienteLayout.createSequentialGroup()
        					.addComponent(jLabel4)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addGroup(panelClienteLayout.createParallelGroup(Alignment.LEADING)
        						.addComponent(efectivo)
        						.addComponent(tarjeta)
        						.addComponent(bono)
        						.addComponent(jLabel5)))
        				.addGroup(panelClienteLayout.createSequentialGroup()
        					.addGroup(panelClienteLayout.createParallelGroup(Alignment.LEADING)
        						.addComponent(jLabel3)
        						.addComponent(jLabel2))
        					.addGap(19)
        					.addGroup(panelClienteLayout.createParallelGroup(Alignment.LEADING)
        						.addComponent(txtDocumento, 125, 125, 125)
        						.addComponent(txtMesa, 125, 125, 125)))
        				.addGroup(panelClienteLayout.createSequentialGroup()
        					.addComponent(jLabel1)
        					.addGap(50)
        					.addComponent(txtNombreC, 125, 125, 125)))
        			.addContainerGap(19, Short.MAX_VALUE))
        		.addGroup(Alignment.TRAILING, panelClienteLayout.createSequentialGroup()
        			.addContainerGap(96, Short.MAX_VALUE)
        			.addComponent(btnRegistrar)
        			.addGap(81))
        );
        panelClienteLayout.setVerticalGroup(
        	panelClienteLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(panelClienteLayout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(jLabel5)
        			.addGap(18)
        			.addGroup(panelClienteLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel1)
        				.addComponent(txtNombreC, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(23)
        			.addGroup(panelClienteLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel3)
        				.addComponent(txtDocumento, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(22)
        			.addGroup(panelClienteLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel2)
        				.addComponent(txtMesa, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(18)
        			.addGroup(panelClienteLayout.createParallelGroup(Alignment.LEADING)
        				.addComponent(efectivo)
        				.addComponent(jLabel4))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(tarjeta)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(bono)
        			.addPreferredGap(ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
        			.addComponent(btnRegistrar)
        			.addContainerGap())
        );
        panelCliente.setLayout(panelClienteLayout);
        buttonGroup1.add(efectivo);
        buttonGroup1.add(tarjeta);
        buttonGroup1.add(bono);

        panelPlato.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Plato");

        jLabel7.setText("Nombre Plato");

        jLabel8.setText("Cantidad");

        jLabel9.setText("Precio");

        jLabel10.setText("Tipo de Plato");

        entrada.setText("Entrada");

        fuerte.setText("Plato Fuerte");

        postre.setText("Postre");

        bebida.setText("Bebida");

        btnAñadir.setText("Añadir");
        btnAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPlatoLayout = new javax.swing.GroupLayout(panelPlato);
        panelPlatoLayout.setHorizontalGroup(
        	panelPlatoLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(panelPlatoLayout.createSequentialGroup()
        			.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        			.addGroup(panelPlatoLayout.createParallelGroup(Alignment.TRAILING)
        				.addGroup(panelPlatoLayout.createSequentialGroup()
        					.addGroup(panelPlatoLayout.createParallelGroup(Alignment.LEADING)
        						.addGroup(panelPlatoLayout.createSequentialGroup()
        							.addComponent(jLabel10)
        							.addGap(18)
        							.addGroup(panelPlatoLayout.createParallelGroup(Alignment.LEADING)
        								.addComponent(postre)
        								.addComponent(entrada)
        								.addComponent(fuerte)
        								.addComponent(bebida)))
        						.addGroup(panelPlatoLayout.createSequentialGroup()
        							.addGroup(panelPlatoLayout.createParallelGroup(Alignment.LEADING)
        								.addComponent(jLabel8)
        								.addComponent(jLabel9)
        								.addComponent(jLabel7))
        							.addGap(30)
        							.addGroup(panelPlatoLayout.createParallelGroup(Alignment.LEADING)
        								.addComponent(txtNombreP, GroupLayout.PREFERRED_SIZE, 97, GroupLayout.PREFERRED_SIZE)
        								.addGroup(panelPlatoLayout.createParallelGroup(Alignment.TRAILING, false)
        									.addComponent(txtCantidad)
        									.addComponent(txtPrecio, GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)))))
        					.addContainerGap())
        				.addGroup(panelPlatoLayout.createSequentialGroup()
        					.addComponent(jLabel6)
        					.addGap(85))))
        		.addGroup(panelPlatoLayout.createSequentialGroup()
        			.addGap(67)
        			.addComponent(btnAñadir, GroupLayout.PREFERRED_SIZE, 74, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(70, Short.MAX_VALUE))
        );
        panelPlatoLayout.setVerticalGroup(
        	panelPlatoLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(panelPlatoLayout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(jLabel6)
        			.addGap(18)
        			.addGroup(panelPlatoLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel7)
        				.addComponent(txtNombreP, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(23)
        			.addGroup(panelPlatoLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel8)
        				.addComponent(txtCantidad, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(22)
        			.addGroup(panelPlatoLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel9)
        				.addComponent(txtPrecio, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(18)
        			.addGroup(panelPlatoLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel10)
        				.addComponent(entrada))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(fuerte)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(postre)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(bebida)
        			.addPreferredGap(ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
        			.addComponent(btnAñadir)
        			.addContainerGap())
        );
        buttonGroup2.add(entrada);
        buttonGroup2.add(fuerte);
        buttonGroup2.add(postre);
        buttonGroup2.add(bebida);
        panelPlato.setLayout(panelPlatoLayout);

        panelEliminar.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Pagar");

        jLabel12.setText("Nombre Plato");

        btnBorrar.setText("Eliminar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        btnPagar.setText("Pagar");
        btnPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPagarActionPerformed(evt);
            }
        });

        jLabel13.setText("Total a pagar");

        txtTotal.setEnabled(false);
        
        JButton btnNew = new JButton("Nuevo");
        btnNew.addActionListener(new ActionListener() {
        	public void actionPerformed(java.awt.event.ActionEvent evt) {
        		btnResetActionPerformed(evt);
        	}
        });
        
        txtPlatos_1 = new JTextArea();

        javax.swing.GroupLayout panelEliminarLayout = new javax.swing.GroupLayout(panelEliminar);
        panelEliminarLayout.setHorizontalGroup(
        	panelEliminarLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(panelEliminarLayout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(panelEliminarLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(Alignment.TRAILING, panelEliminarLayout.createSequentialGroup()
        					.addComponent(jLabel13)
        					.addGap(18)
        					.addComponent(txtTotal, 99, 99, 99)
        					.addContainerGap())
        				.addGroup(Alignment.TRAILING, panelEliminarLayout.createSequentialGroup()
        					.addComponent(btnBorrar)
        					.addGap(62))
        				.addGroup(panelEliminarLayout.createParallelGroup(Alignment.TRAILING)
        					.addGroup(panelEliminarLayout.createSequentialGroup()
        						.addPreferredGap(ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
        						.addGroup(panelEliminarLayout.createParallelGroup(Alignment.LEADING, false)
        							.addComponent(btnPagar, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        							.addComponent(btnNew, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE))
        						.addGap(67))
        					.addGroup(panelEliminarLayout.createSequentialGroup()
        						.addComponent(txtPlatos_1, GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
        						.addContainerGap())
        					.addGroup(panelEliminarLayout.createSequentialGroup()
        						.addComponent(jLabel12)
        						.addGap(18)
        						.addGroup(panelEliminarLayout.createParallelGroup(Alignment.LEADING)
        							.addComponent(jLabel11)
        							.addComponent(txtBuscar, 99, 99, 99))
        						.addGap(20)))))
        );
        panelEliminarLayout.setVerticalGroup(
        	panelEliminarLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(panelEliminarLayout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(jLabel11)
        			.addGap(19)
        			.addGroup(panelEliminarLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel12)
        				.addComponent(txtBuscar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(btnBorrar)
        			.addGap(8)
        			.addComponent(txtPlatos_1, GroupLayout.PREFERRED_SIZE, 139, GroupLayout.PREFERRED_SIZE)
        			.addGap(18)
        			.addGroup(panelEliminarLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(txtTotal, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel13))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addComponent(btnPagar)
        			.addPreferredGap(ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
        			.addComponent(btnNew)
        			.addContainerGap())
        );
        panelEliminar.setLayout(panelEliminarLayout);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelPlato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelPlato, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelCliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
        try{
            //Método de crear usuario
        	if(txtNombreC.getText().equals("") || txtDocumento.getText().equals("") || Integer.parseInt(txtMesa.getText()) == 0 || buttonGroup1.getSelection().equals(null)){
            	JOptionPane.showMessageDialog(null, "Debe llenar todos los campos");
            }else{
            	String pago = "";
            	if(efectivo.isSelected()){
            		pago = "Efectivo";
            	}else if(tarjeta.isSelected()){
            		pago = "Tarjeta";
            	}else{
            		pago = "Bono de regalo";
            	}
            	cuenta = new Cuenta(txtNombreC.getText(), txtDocumento.getText(), Integer.parseInt(txtMesa.getText()), pago);
            	if(!listaCuentas.buscarElemento(cuenta)){
            		listaCuentas.insertar(cuenta);
            		JOptionPane.showMessageDialog(null, "Se ha registrado la cuenta de " + cuenta.getNombre());
            		controlPlato(true);
            		controlCliente(false);
            	}else{
            		JOptionPane.showMessageDialog(null, "El usuario ya se ha registrado con anterioridad");
            	}
            		
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Debe ingresar un dato válido");
        }
    }
    
    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    	todoBlanco();
    }  

    private void btnAñadirActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    	Cuenta cuenTemp;
		Nodo actual;
		Nodo referencia;
		Plato platoActual;
		//Se ubica en la cabeza
		referencia = cuenta.getLista().getReferencia();
		actual = referencia;
		String pActual = "";
    	boolean existe;
    	try{
    		String tipo = "";
        	if(entrada.isSelected()){
        		tipo = "Entrada";
        	}else if(fuerte.isSelected()){
        		tipo = "Plato Fuerte";
        	}else if(postre.isSelected()){
        		tipo = "Postre";
        	}else{
        		tipo = "Bebida";
        		}
        	if(referencia == null){
        		if(txtNombreP.getText().isEmpty() || txtCantidad.getText().isEmpty() || txtPrecio.getText().isEmpty() || buttonGroup2.getSelection().equals(null)){
                	JOptionPane.showMessageDialog(null, "Debe llenar todos los campos");
                }else{
                	plato = new Plato(txtNombreP.getText(), Integer.parseInt(txtCantidad.getText()), tipo, Float.parseFloat(txtPrecio.getText()));
                	JOptionPane.showMessageDialog(null, plato.nombrePlato + "; " + plato.cantidad + "; " + plato.tipoPlato + "; " + plato.precio);
            		cuenTemp = (Cuenta)(listaCuentas.retornar(cuenta).getDato());
        			cuenTemp.getLista().insertar(plato);
        			Plato platoTemp;
        	    	referencia = cuenta.getLista().getReferencia();
        	    	actual = referencia;
        	    	String temporal = "";
        	    	for(int i = 0; i < cuenTemp.getLista().getCantidad(); i++){
        	    		platoTemp = (Plato)actual.getDato();
        	    		temporal = (temporal + platoTemp.nombrePlato + ", " + platoTemp.cantidad + "\n");
        	    		actual = actual.getSiguiente();
        	    	}
        	    	txtPlatos_1.setText(temporal);
        	    	JOptionPane.showMessageDialog(null, temporal);
        			controlBorrar(true);
                 }
        		existe = false;
        	}else{
        		existe = false;
        		platoActual = (Plato)actual.getDato();
        		for(int x = 0; x < cuenta.getLista().getCantidad(); x++){
					platoActual = (Plato)actual.getDato();
					pActual = platoActual.getNombrePlato();
					//Compara el nombre y el documento de el dato del nodo que se está recorriendo y el dato que pasa como parámetro
					existe = (pActual.equals(txtNombreP.getText()));
					if(existe){
						x = cuenta.getLista().getCantidad();
					}
					//Pasa al nodo siguiente
					actual = actual.getSiguiente();
				}
        		if(existe){
        			platoActual.setCantidad(platoActual.getCantidad() + Integer.parseInt(txtCantidad.getText()));
        			Plato platoTemp;
        	    	Nodo temp = cuenta.getLista().getReferencia();
        	    	Nodo recorrer = temp;
        	    	String temporal = "";
        	    	for(int i = 0; i < cuenta.getLista().getCantidad(); i++){
        	    		platoTemp = (Plato)recorrer.getDato();
        	    		temporal = (temporal + platoTemp.nombrePlato + ", " + platoTemp.cantidad + "\n");
        	    		recorrer = recorrer.getSiguiente();
        	    	}
        	    	txtPlatos_1.setText(temporal);
        		}else{
        			if(txtNombreP.getText().isEmpty() || txtCantidad.getText().isEmpty() || txtPrecio.getText().isEmpty() || buttonGroup2.getSelection().equals(null)){
                    	JOptionPane.showMessageDialog(null, "Debe llenar todos los campos");
                    }else{
        			plato = new Plato(txtNombreP.getText(), Integer.parseInt(txtCantidad.getText()), tipo, Float.parseFloat(txtPrecio.getText()));
            		cuenTemp = (Cuenta)(listaCuentas.retornar(cuenta).getDato());
        			cuenTemp.getLista().insertar(plato);
        			Plato platoTemp;
        	    	Nodo temp = cuenta.getLista().getReferencia();
        	    	Nodo recorrer = temp;
        	    	String temporal = "";
        	    	for(int i = 0; i < cuenTemp.getLista().getCantidad(); i++){
        	    		platoTemp = (Plato)recorrer.getDato();
        	    		temporal = (temporal + platoTemp.nombrePlato + ", " + platoTemp.cantidad + "\n");
        	    		recorrer = recorrer.getSiguiente();
        	    	}
        	    	txtPlatos_1.setText(temporal);
                    }
        		}
            }
    	}catch(Exception e){
    		JOptionPane.showMessageDialog(null, "Por favor ingrese datos válidos");
    	}
    }                                         

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    	Plato platoTemp;
    	Cuenta cuentaTemp;
    	cuentaTemp = (Cuenta)(listaCuentas.retornar(cuenta).getDato());
    	cuentaTemp.getLista().eliminarElemento(txtBuscar.getText());
    	Nodo referencia = cuenta.getLista().getReferencia();
    	Nodo buscador = referencia;
    	String temporal = "";
    	if(referencia != null){
    		for(int i = 0; i < cuenta.getLista().getCantidad(); i++){
	    		platoTemp = (Plato)buscador.getDato();
	    		temporal = (temporal + platoTemp.nombrePlato + ", " + platoTemp.cantidad + "\n");
	    		buscador = buscador.getSiguiente();
	    	}
    		txtPlatos_1.setText(temporal);
    	}else if(cuenta.getLista().getCantidad() == 0){
    		JOptionPane.showMessageDialog(null, "No cuenta con platos en su registro");
    		txtBuscar.setText("");
    		txtPlatos_1.setText("");
    		controlBorrar(false);
    	}
    }                                         

    private void btnPagarActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    	Plato platoTemp;
    	Nodo referencia = cuenta.getLista().getReferencia();
    	Nodo buscador = referencia;
    	int temporal = 0;
    	for(int i = 0; i < cuenta.getLista().getCantidad(); i++){
	    	platoTemp = (Plato)buscador.getDato();
	    	temporal = (int) (temporal + platoTemp.cantidad*platoTemp.precio);
	    	JOptionPane.showMessageDialog(null, "Cantidad: " + platoTemp.cantidad + "\nPrecio: " + platoTemp.precio);
	    	buscador = buscador.getSiguiente();
	    }
    	JOptionPane.showMessageDialog(null, temporal);
    	String op = JOptionPane.showInputDialog(null, "¿Desea incluir el 10% de propina? Escriba SI o NO");
    	if(cuenta.getPago().equals("Tarjeta")){ 
    		if(op.equalsIgnoreCase("SI")){
    			txtTotal.setText("$" + (temporal + temporal*0.3));
    	    	JOptionPane.showMessageDialog(null, "El valor del IVA de su compra es de $" + (temporal*0.19));
    		}else{
    			txtTotal.setText("$" + (temporal*0.2));
    			JOptionPane.showMessageDialog(null, "El valor del IVA de su compra es de $" + (temporal*0.19));
    		}
    	}else{
    		if(op.equalsIgnoreCase("SI")){
    			txtTotal.setText("$" + (temporal + temporal*0.29));
    			JOptionPane.showMessageDialog(null, "El valor del IVA de su compra es de $" + (temporal*0.19));
    		}else{
    			txtTotal.setText("$" + (temporal + temporal*0.19));
    			JOptionPane.showMessageDialog(null, "El valor del IVA de su compra es de $" + (temporal*0.19));
    		}
    	}
    	
    	
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CajaRegistradora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CajaRegistradora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CajaRegistradora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CajaRegistradora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainClass().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JRadioButton bebida;
    private javax.swing.JRadioButton bono;
    private javax.swing.JButton btnAñadir;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnPagar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JRadioButton efectivo;
    private javax.swing.JRadioButton entrada;
    private javax.swing.JRadioButton fuerte;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel panelCliente;
    private javax.swing.JPanel panelEliminar;
    private javax.swing.JPanel panelPlato;
    private javax.swing.JRadioButton postre;
    private javax.swing.JRadioButton tarjeta;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtDocumento;
    private javax.swing.JTextField txtMesa;
    private javax.swing.JTextField txtNombreC;
    private javax.swing.JTextField txtNombreP;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextArea txtPlatos;
    private JTextArea txtPlatos_1;
}
